package(default_visibility = ["//visibility:public",],)

# https://khjtony.github.io/programming/2018/12/31/Add-external-library-to-bazel.html

include_files = [
    "NTL/ALL_FEATURES.h",
    "NTL/BasicThreadPool.h",
    "NTL/FFT.h",
    "NTL/FFT_impl.h",
    "NTL/FacVec.h",
    "NTL/GF2.h",
    "NTL/GF2E.h",
    "NTL/GF2EX.h",
    "NTL/GF2EXFactoring.h",
    "NTL/GF2X.h",
    "NTL/GF2XFactoring.h",
    "NTL/GF2XVec.h",
    "NTL/HNF.h",
    "NTL/LLL.h",
    "NTL/Lazy.h",
    "NTL/LazyTable.h",
    "NTL/MatPrime.h",
    "NTL/PD.h",
    "NTL/PackageInfo.h",
    "NTL/REPORT_ALL_FEATURES.h",
    "NTL/RR.h",
    "NTL/SmartPtr.h",
    "NTL/WordVector.h",
    "NTL/ZZ.h",
    "NTL/ZZVec.h",
    "NTL/ZZX.h",
    "NTL/ZZXFactoring.h",
    "NTL/ZZ_limbs.h",
    "NTL/ZZ_p.h",
    "NTL/ZZ_pE.h",
    "NTL/ZZ_pEX.h",
    "NTL/ZZ_pEXFactoring.h",
    "NTL/ZZ_pX.h",
    "NTL/ZZ_pXFactoring.h",
    "NTL/ctools.h",
    "NTL/fileio.h",
    "NTL/linux_s390x.h",
    "NTL/lip.h",
    "NTL/lzz_p.h",
    "NTL/lzz_pE.h",
    "NTL/lzz_pEX.h",
    "NTL/lzz_pEXFactoring.h",
    "NTL/lzz_pX.h",
    "NTL/lzz_pXFactoring.h",
    "NTL/mat_GF2.h",
    "NTL/mat_GF2E.h",
    "NTL/mat_RR.h",
    "NTL/mat_ZZ.h",
    "NTL/mat_ZZ_p.h",
    "NTL/mat_ZZ_pE.h",
    "NTL/mat_lzz_p.h",
    "NTL/mat_lzz_pE.h",
    "NTL/mat_poly_ZZ.h",
    "NTL/mat_poly_ZZ_p.h",
    "NTL/mat_poly_lzz_p.h",
    "NTL/matrix.h",
    "NTL/new.h",
    "NTL/pair.h",
    "NTL/pair_GF2EX_long.h",
    "NTL/pair_GF2X_long.h",
    "NTL/pair_ZZX_long.h",
    "NTL/pair_ZZ_pEX_long.h",
    "NTL/pair_ZZ_pX_long.h",
    "NTL/pair_lzz_pEX_long.h",
    "NTL/pair_lzz_pX_long.h",
    "NTL/pd_FFT.h",
    "NTL/quad_float.h",
    "NTL/sp_arith.h",
    "NTL/thread.h",
    "NTL/tools.h",
    "NTL/vec_GF2.h",
    "NTL/vec_GF2E.h",
    "NTL/vec_GF2XVec.h",
    "NTL/vec_RR.h",
    "NTL/vec_ZZ.h",
    "NTL/vec_ZZVec.h",
    "NTL/vec_ZZ_p.h",
    "NTL/vec_ZZ_pE.h",
    "NTL/vec_double.h",
    "NTL/vec_long.h",
    "NTL/vec_lzz_p.h",
    "NTL/vec_lzz_pE.h",
    "NTL/vec_quad_float.h",
    "NTL/vec_ulong.h",
    "NTL/vec_vec_GF2.h",
    "NTL/vec_vec_GF2E.h",
    "NTL/vec_vec_RR.h",
    "NTL/vec_vec_ZZ.h",
    "NTL/vec_vec_ZZ_p.h",
    "NTL/vec_vec_ZZ_pE.h",
    "NTL/vec_vec_long.h",
    "NTL/vec_vec_lzz_p.h",
    "NTL/vec_vec_lzz_pE.h",
    "NTL/vec_vec_ulong.h",
    "NTL/vec_xdouble.h",
    "NTL/vector.h",
    "NTL/version.h",
    "NTL/xdouble.h",
]

lib_files = [
    "lib/libntl.a",
]

genrule(
    name = "libntl-build",
    outs = include_files + lib_files,
    cmd = "\n".join([
        'set -x',
        'export INSTALL_DIR=$$(pwd)/$(@D)',
        'export TMP_DIR=$$(mktemp -d -t libntl.XXXXX)',
        'echo $$INSTALL_DIR',
        'echo $$TMP_DIR',
        'mkdir -p $$TMP_DIR',
        'cp -R $$(pwd)/../../../../../external/ntl/* $$TMP_DIR',
        'cd $$TMP_DIR',
        'cd src',
        './configure PREFIX=$$INSTALL_DIR NTL_THREADS=on NTL_THREAD_BOOST=on NTL_EXCEPTIONS=on SHARED=on NTL_STD_CXX11=on NTL_SAFE_VECTORS=off TUNE=generic',
        'make && make install',
        'cp $$TMP_DIR/../include/NTL/config.h $$INSTALL_DIR/include/NTL',
        'rm -rf $$TMP_DIR',
    ]),
)

cc_library(
    name = "libntl",
    srcs = lib_files,
    hdrs = include_files,
    includes=["include"],
    # Using an empty include_prefix causes Bazel to emit -I instead of -iquote
    # options for the include directory, so that #include <gmp.h> works.
    #include_prefix = "",
    linkstatic = True,
)
